// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:3.0.0.0
//      SpecFlow Generator Version:3.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace CaseManagement.HumanTasks.Acceptance.Tests.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class HumanTaskInstancesFeature : Xunit.IClassFixture<HumanTaskInstancesFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "HumanTaskInstances.feature"
#line hidden
        
        public HumanTaskInstancesFeature(HumanTaskInstancesFeature.FixtureData fixtureData, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "HumanTaskInstances", "\tCheck /humantaskinstances", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.ScenarioTearDown();
        }
        
        [Xunit.FactAttribute(DisplayName="Create human task instance")]
        [Xunit.TraitAttribute("FeatureTitle", "HumanTaskInstances")]
        [Xunit.TraitAttribute("Description", "Create human task instance")]
        public virtual void CreateHumanTaskInstance()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create human task instance", null, ((string[])(null)));
#line 4
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table148 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table148.AddRow(new string[] {
                        "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                        "taskInitiator"});
#line 5
 testRunner.When("authenticate", ((string)(null)), table148, "When ");
#line hidden
            TechTalk.SpecFlow.Table table149 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table149.AddRow(new string[] {
                        "humanTaskName",
                        "addClient"});
            table149.AddRow(new string[] {
                        "operationParameters",
                        "{ \"isGoldenClient\": \"true\", \"firstName\": \"FirstName\" }"});
#line 8
 testRunner.And("execute HTTP POST JSON request \'http://localhost/humantaskinstances\'", ((string)(null)), table149, "And ");
#line 12
 testRunner.And("extract JSON from body", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.And("extract \'id\' from JSON body into \'humanTaskInstanceId\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.And("execute HTTP GET request \'http://localhost/humantaskinstances/$humanTaskInstanceI" +
                    "d$/details\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.And("extract JSON from body into \'detailsHumanTaskInstance\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table150 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
#line 16
 testRunner.And("execute HTTP POST JSON request \'http://localhost/humantaskinstances/$humanTaskIns" +
                    "tanceId$/history\'", ((string)(null)), table150, "And ");
#line 18
 testRunner.And("extract JSON from body into \'historyHumanTaskInstance\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.Then("HTTP status code equals to \'200\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 21
 testRunner.Then("extract JSON \'detailsHumanTaskInstance\', JSON exists \'id\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 22
 testRunner.Then("extract JSON \'detailsHumanTaskInstance\', JSON \'name\'=\'addClient\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 23
 testRunner.Then("extract JSON \'detailsHumanTaskInstance\', JSON \'status\'=\'RESERVED\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 24
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[0].userPrincipal\'=\'taskIni" +
                    "tiator\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 25
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[0].eventType\'=\'CREATED\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 26
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[0].endOwner\'=\'administrato" +
                    "r\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 27
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[0].taskStatus\'=\'RESERVED\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Create deferred human task instance (activated after 5 seconds)")]
        [Xunit.TraitAttribute("FeatureTitle", "HumanTaskInstances")]
        [Xunit.TraitAttribute("Description", "Create deferred human task instance (activated after 5 seconds)")]
        public virtual void CreateDeferredHumanTaskInstanceActivatedAfter5Seconds()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Create deferred human task instance (activated after 5 seconds)", null, ((string[])(null)));
#line 29
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table151 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table151.AddRow(new string[] {
                        "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                        "taskInitiator"});
#line 30
 testRunner.When("authenticate", ((string)(null)), table151, "When ");
#line 33
 testRunner.And("add \'5\' seconds into \'activationDeferralTime\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table152 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table152.AddRow(new string[] {
                        "humanTaskName",
                        "addClient"});
            table152.AddRow(new string[] {
                        "operationParameters",
                        "{ \"isGoldenClient\": \"true\", \"firstName\": \"FirstName\" }"});
            table152.AddRow(new string[] {
                        "activationDeferralTime",
                        "$activationDeferralTime$"});
#line 34
 testRunner.And("execute HTTP POST JSON request \'http://localhost/humantaskinstances\'", ((string)(null)), table152, "And ");
#line 39
 testRunner.And("extract JSON from body", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.And("extract \'id\' from JSON body into \'humanTaskInstanceId\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.And("poll \'http://localhost/humantaskinstances/$humanTaskInstanceId$/details\', until \'" +
                    "status\'=\'RESERVED\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.And("extract JSON from body into \'detailsHumanTaskInstance\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table153 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
#line 43
 testRunner.And("execute HTTP POST JSON request \'http://localhost/humantaskinstances/$humanTaskIns" +
                    "tanceId$/history\'", ((string)(null)), table153, "And ");
#line 45
 testRunner.And("extract JSON from body into \'historyHumanTaskInstance\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.Then("HTTP status code equals to \'200\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 48
 testRunner.Then("extract JSON \'detailsHumanTaskInstance\', JSON exists \'id\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 49
 testRunner.Then("extract JSON \'detailsHumanTaskInstance\', JSON \'name\'=\'addClient\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 50
 testRunner.Then("extract JSON \'detailsHumanTaskInstance\', JSON \'status\'=\'RESERVED\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 51
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[0].userPrincipal\'=\'taskIni" +
                    "tiator\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 52
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[0].eventType\'=\'CREATED\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 53
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[0].taskStatus\'=\'CREATED\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 54
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[1].userPrincipal\'=\'Process" +
                    "ActivationTimer\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 55
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[1].eventType\'=\'ACTIVATE\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 56
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[1].endOwner\'=\'administrato" +
                    "r\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 57
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[1].taskStatus\'=\'RESERVED\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Nominate a human task")]
        [Xunit.TraitAttribute("FeatureTitle", "HumanTaskInstances")]
        [Xunit.TraitAttribute("Description", "Nominate a human task")]
        public virtual void NominateAHumanTask()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Nominate a human task", null, ((string[])(null)));
#line 59
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table154 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table154.AddRow(new string[] {
                        "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                        "taskInitiator"});
#line 60
 testRunner.When("authenticate", ((string)(null)), table154, "When ");
#line hidden
            TechTalk.SpecFlow.Table table155 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table155.AddRow(new string[] {
                        "humanTaskName",
                        "noPotentialOwner"});
#line 63
 testRunner.And("execute HTTP POST JSON request \'http://localhost/humantaskinstances\'", ((string)(null)), table155, "And ");
#line 66
 testRunner.And("extract JSON from body", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
 testRunner.And("extract \'id\' from JSON body into \'humanTaskInstanceId\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table156 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table156.AddRow(new string[] {
                        "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                        "businessAdmin"});
#line 68
 testRunner.And("authenticate", ((string)(null)), table156, "And ");
#line hidden
            TechTalk.SpecFlow.Table table157 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table157.AddRow(new string[] {
                        "userIdentifiers",
                        "[\"potentialOwner\"]"});
#line 71
 testRunner.And("execute HTTP POST JSON request \'http://localhost/humantaskinstances/$humanTaskIns" +
                    "tanceId$/nominate\'", ((string)(null)), table157, "And ");
#line 74
 testRunner.And("execute HTTP GET request \'http://localhost/humantaskinstances/$humanTaskInstanceI" +
                    "d$/details\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
 testRunner.And("extract JSON from body into \'detailsHumanTaskInstance\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table158 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
#line 76
 testRunner.And("execute HTTP POST JSON request \'http://localhost/humantaskinstances/$humanTaskIns" +
                    "tanceId$/history\'", ((string)(null)), table158, "And ");
#line 78
 testRunner.And("extract JSON from body into \'historyHumanTaskInstance\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
 testRunner.Then("HTTP status code equals to \'200\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 81
 testRunner.Then("extract JSON \'detailsHumanTaskInstance\', JSON exists \'id\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 82
 testRunner.Then("extract JSON \'detailsHumanTaskInstance\', JSON \'name\'=\'noPotentialOwner\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 83
 testRunner.Then("extract JSON \'detailsHumanTaskInstance\', JSON \'status\'=\'RESERVED\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 84
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[0].userPrincipal\'=\'taskIni" +
                    "tiator\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 85
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[0].eventType\'=\'CREATED\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 86
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[0].taskStatus\'=\'CREATED\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 87
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[1].userPrincipal\'=\'busines" +
                    "sAdmin\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 88
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[1].eventType\'=\'ACTIVATE\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 89
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[1].endOwner\'=\'potentialOwn" +
                    "er\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 90
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[1].taskStatus\'=\'RESERVED\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Get humantask instance description")]
        [Xunit.TraitAttribute("FeatureTitle", "HumanTaskInstances")]
        [Xunit.TraitAttribute("Description", "Get humantask instance description")]
        public virtual void GetHumantaskInstanceDescription()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get humantask instance description", null, ((string[])(null)));
#line 92
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table159 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table159.AddRow(new string[] {
                        "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                        "taskInitiator"});
#line 93
 testRunner.When("authenticate", ((string)(null)), table159, "When ");
#line hidden
            TechTalk.SpecFlow.Table table160 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table160.AddRow(new string[] {
                        "humanTaskName",
                        "addClient"});
            table160.AddRow(new string[] {
                        "operationParameters",
                        "{ \"isGoldenClient\": \"true\", \"firstName\": \"FirstName\" }"});
#line 96
 testRunner.And("execute HTTP POST JSON request \'http://localhost/humantaskinstances\'", ((string)(null)), table160, "And ");
#line 100
 testRunner.And("extract JSON from body", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
 testRunner.And("extract \'id\' from JSON body into \'humanTaskInstanceId\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table161 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table161.AddRow(new string[] {
                        "Accept-Language",
                        "en-US"});
#line 102
 testRunner.And("execute HTTP GET request \'http://localhost/humantaskinstances/$humanTaskInstanceI" +
                    "d$/description\'", ((string)(null)), table161, "And ");
#line 106
 testRunner.Then("HTTP status code equals to \'200\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 107
 testRunner.Then("html = \'<b>firstname is FirstName, isGoldenClient true</b>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Claim a human task instance")]
        [Xunit.TraitAttribute("FeatureTitle", "HumanTaskInstances")]
        [Xunit.TraitAttribute("Description", "Claim a human task instance")]
        public virtual void ClaimAHumanTaskInstance()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Claim a human task instance", null, ((string[])(null)));
#line 109
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table162 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table162.AddRow(new string[] {
                        "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                        "taskInitiator"});
#line 110
 testRunner.When("authenticate", ((string)(null)), table162, "When ");
#line hidden
            TechTalk.SpecFlow.Table table163 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table163.AddRow(new string[] {
                        "humanTaskName",
                        "multiplePotentialOwners"});
#line 113
 testRunner.And("execute HTTP POST JSON request \'http://localhost/humantaskinstances\'", ((string)(null)), table163, "And ");
#line 116
 testRunner.And("extract JSON from body", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
 testRunner.And("extract \'id\' from JSON body into \'humanTaskInstanceId\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table164 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table164.AddRow(new string[] {
                        "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                        "administrator"});
#line 118
 testRunner.And("authenticate", ((string)(null)), table164, "And ");
#line 121
 testRunner.And("execute HTTP GET request \'http://localhost/humantaskinstances/$humanTaskInstanceI" +
                    "d$/claim\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 122
 testRunner.And("execute HTTP GET request \'http://localhost/humantaskinstances/$humanTaskInstanceI" +
                    "d$/details\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
 testRunner.And("extract JSON from body into \'detailsHumanTaskInstance\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table165 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
#line 124
 testRunner.And("execute HTTP POST JSON request \'http://localhost/humantaskinstances/$humanTaskIns" +
                    "tanceId$/history\'", ((string)(null)), table165, "And ");
#line 126
 testRunner.And("extract JSON from body into \'historyHumanTaskInstance\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
 testRunner.Then("HTTP status code equals to \'200\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 129
 testRunner.Then("extract JSON \'detailsHumanTaskInstance\', JSON exists \'id\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 130
 testRunner.Then("extract JSON \'detailsHumanTaskInstance\', JSON \'name\'=\'multiplePotentialOwners\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 131
 testRunner.Then("extract JSON \'detailsHumanTaskInstance\', JSON \'status\'=\'RESERVED\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 132
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[0].userPrincipal\'=\'taskIni" +
                    "tiator\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 133
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[0].eventType\'=\'CREATED\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 134
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[0].taskStatus\'=\'READY\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 135
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[1].userPrincipal\'=\'adminis" +
                    "trator\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 136
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[1].eventType\'=\'CLAIM\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 137
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[1].endOwner\'=\'administrato" +
                    "r\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 138
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[1].taskStatus\'=\'RESERVED\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Start a human task instance")]
        [Xunit.TraitAttribute("FeatureTitle", "HumanTaskInstances")]
        [Xunit.TraitAttribute("Description", "Start a human task instance")]
        public virtual void StartAHumanTaskInstance()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Start a human task instance", null, ((string[])(null)));
#line 140
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table166 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table166.AddRow(new string[] {
                        "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                        "taskInitiator"});
#line 141
 testRunner.When("authenticate", ((string)(null)), table166, "When ");
#line hidden
            TechTalk.SpecFlow.Table table167 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table167.AddRow(new string[] {
                        "humanTaskName",
                        "multiplePotentialOwners"});
#line 144
 testRunner.And("execute HTTP POST JSON request \'http://localhost/humantaskinstances\'", ((string)(null)), table167, "And ");
#line 147
 testRunner.And("extract JSON from body", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 148
 testRunner.And("extract \'id\' from JSON body into \'humanTaskInstanceId\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table168 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table168.AddRow(new string[] {
                        "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                        "administrator"});
#line 149
 testRunner.And("authenticate", ((string)(null)), table168, "And ");
#line 152
 testRunner.And("execute HTTP GET request \'http://localhost/humantaskinstances/$humanTaskInstanceI" +
                    "d$/start\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 153
 testRunner.And("execute HTTP GET request \'http://localhost/humantaskinstances/$humanTaskInstanceI" +
                    "d$/details\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 154
 testRunner.And("extract JSON from body into \'detailsHumanTaskInstance\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table169 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
#line 155
 testRunner.And("execute HTTP POST JSON request \'http://localhost/humantaskinstances/$humanTaskIns" +
                    "tanceId$/history\'", ((string)(null)), table169, "And ");
#line 157
 testRunner.And("extract JSON from body into \'historyHumanTaskInstance\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
 testRunner.Then("HTTP status code equals to \'200\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 160
 testRunner.Then("extract JSON \'detailsHumanTaskInstance\', JSON exists \'id\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 161
 testRunner.Then("extract JSON \'detailsHumanTaskInstance\', JSON \'name\'=\'multiplePotentialOwners\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 162
 testRunner.Then("extract JSON \'detailsHumanTaskInstance\', JSON \'status\'=\'INPROGRESS\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 163
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[0].userPrincipal\'=\'taskIni" +
                    "tiator\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 164
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[0].eventType\'=\'CREATED\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 165
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[0].taskStatus\'=\'READY\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 166
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[1].userPrincipal\'=\'adminis" +
                    "trator\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 167
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[1].eventType\'=\'START\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 168
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[1].endOwner\'=\'administrato" +
                    "r\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 169
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[1].taskStatus\'=\'INPROGRESS" +
                    "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Complete a human task instance")]
        [Xunit.TraitAttribute("FeatureTitle", "HumanTaskInstances")]
        [Xunit.TraitAttribute("Description", "Complete a human task instance")]
        public virtual void CompleteAHumanTaskInstance()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Complete a human task instance", null, ((string[])(null)));
#line 171
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table170 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table170.AddRow(new string[] {
                        "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                        "taskInitiator"});
#line 172
 testRunner.When("authenticate", ((string)(null)), table170, "When ");
#line hidden
            TechTalk.SpecFlow.Table table171 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table171.AddRow(new string[] {
                        "Key",
                        "Value"});
            table171.AddRow(new string[] {
                        "humanTaskName",
                        "addClient"});
            table171.AddRow(new string[] {
                        "operationParameters",
                        "{ \"firstName\": \"firstname\", \"isGoldenClient\": \"true\" }"});
#line 175
    testRunner.And("execute HTTP POST JSON request \'http://localhost/humantaskinstances\'", ((string)(null)), table171, "And ");
#line 180
 testRunner.And("extract JSON from body", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 181
 testRunner.And("extract \'id\' from JSON body into \'humanTaskInstanceId\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table172 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table172.AddRow(new string[] {
                        "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                        "administrator"});
#line 182
 testRunner.And("authenticate", ((string)(null)), table172, "And ");
#line 185
 testRunner.And("execute HTTP GET request \'http://localhost/humantaskinstances/$humanTaskInstanceI" +
                    "d$/start\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table173 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table173.AddRow(new string[] {
                        "operationParameters",
                        "{ \"wage\": \"2\" }"});
#line 186
 testRunner.And("execute HTTP POST JSON request \'http://localhost/humantaskinstances/$humanTaskIns" +
                    "tanceId$/complete\'", ((string)(null)), table173, "And ");
#line 189
 testRunner.And("execute HTTP GET request \'http://localhost/humantaskinstances/$humanTaskInstanceI" +
                    "d$/details\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 190
 testRunner.And("extract JSON from body into \'detailsHumanTaskInstance\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table174 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
#line 191
 testRunner.And("execute HTTP POST JSON request \'http://localhost/humantaskinstances/$humanTaskIns" +
                    "tanceId$/history\'", ((string)(null)), table174, "And ");
#line 193
 testRunner.And("extract JSON from body into \'historyHumanTaskInstance\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 195
 testRunner.Then("HTTP status code equals to \'200\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 196
 testRunner.Then("extract JSON \'detailsHumanTaskInstance\', JSON exists \'id\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 197
 testRunner.Then("extract JSON \'detailsHumanTaskInstance\', JSON \'name\'=\'addClient\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 198
 testRunner.Then("extract JSON \'detailsHumanTaskInstance\', JSON \'status\'=\'COMPLETED\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 199
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[0].userPrincipal\'=\'taskIni" +
                    "tiator\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 200
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[0].eventType\'=\'CREATED\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 201
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[0].taskStatus\'=\'RESERVED\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 202
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[1].userPrincipal\'=\'adminis" +
                    "trator\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 203
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[1].eventType\'=\'START\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 204
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[1].endOwner\'=\'administrato" +
                    "r\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 205
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[1].taskStatus\'=\'INPROGRESS" +
                    "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 206
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[2].userPrincipal\'=\'adminis" +
                    "trator\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 207
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[2].eventType\'=\'COMPLETE\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 208
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[2].endOwner\'=\'administrato" +
                    "r\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 209
 testRunner.Then("extract JSON \'historyHumanTaskInstance\', JSON \'content[2].taskStatus\'=\'COMPLETED\'" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Check a notification is created by StartDeadLine")]
        [Xunit.TraitAttribute("FeatureTitle", "HumanTaskInstances")]
        [Xunit.TraitAttribute("Description", "Check a notification is created by StartDeadLine")]
        public virtual void CheckANotificationIsCreatedByStartDeadLine()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check a notification is created by StartDeadLine", null, ((string[])(null)));
#line 211
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table175 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table175.AddRow(new string[] {
                        "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                        "taskInitiator"});
#line 212
 testRunner.When("authenticate", ((string)(null)), table175, "When ");
#line hidden
            TechTalk.SpecFlow.Table table176 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table176.AddRow(new string[] {
                        "humanTaskName",
                        "startDeadLine"});
            table176.AddRow(new string[] {
                        "operationParameters",
                        "{ \"firstName\": \"FirstName\" }"});
#line 215
 testRunner.And("execute HTTP POST JSON request \'http://localhost/humantaskinstances\'", ((string)(null)), table176, "And ");
#line 219
 testRunner.And("extract JSON from body", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 220
 testRunner.And("extract \'id\' from JSON body into \'humanTaskInstanceId\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table177 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table177.AddRow(new string[] {
                        "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                        "guest"});
#line 221
 testRunner.And("authenticate", ((string)(null)), table177, "And ");
#line hidden
            TechTalk.SpecFlow.Table table178 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
#line 224
 testRunner.And("poll HTTP POST JSON request \'http://localhost/notificationinstances/.search\', unt" +
                    "il \'totalLength\'=\'1\'", ((string)(null)), table178, "And ");
#line 226
 testRunner.And("extract JSON from body", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 228
 testRunner.Then("HTTP status code equals to \'200\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 229
 testRunner.Then("JSON \'totalLength\'=\'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 230
 testRunner.Then("JSON \'content[0].name\'=\'notification\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 231
 testRunner.Then("JSON \'content[0].status\'=\'READY\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Check a notification is created by CompletionDeadLine")]
        [Xunit.TraitAttribute("FeatureTitle", "HumanTaskInstances")]
        [Xunit.TraitAttribute("Description", "Check a notification is created by CompletionDeadLine")]
        public virtual void CheckANotificationIsCreatedByCompletionDeadLine()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check a notification is created by CompletionDeadLine", null, ((string[])(null)));
#line 233
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table179 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table179.AddRow(new string[] {
                        "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                        "taskInitiator"});
#line 234
 testRunner.When("authenticate", ((string)(null)), table179, "When ");
#line hidden
            TechTalk.SpecFlow.Table table180 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table180.AddRow(new string[] {
                        "humanTaskName",
                        "completionDeadLine"});
            table180.AddRow(new string[] {
                        "operationParameters",
                        "{ \"firstName\": \"FirstName\" }"});
#line 237
 testRunner.And("execute HTTP POST JSON request \'http://localhost/humantaskinstances\'", ((string)(null)), table180, "And ");
#line 241
 testRunner.And("extract JSON from body", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 242
 testRunner.And("extract \'id\' from JSON body into \'humanTaskInstanceId\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table181 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table181.AddRow(new string[] {
                        "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                        "guest"});
#line 243
 testRunner.And("authenticate", ((string)(null)), table181, "And ");
#line hidden
            TechTalk.SpecFlow.Table table182 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
#line 246
 testRunner.And("poll HTTP POST JSON request \'http://localhost/notificationinstances/.search\', unt" +
                    "il \'$.content[?(@.name == \'notificationCompletion\')].name\'=\'notificationCompleti" +
                    "on\'", ((string)(null)), table182, "And ");
#line 248
 testRunner.And("extract JSON from body", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 250
 testRunner.Then("HTTP status code equals to \'200\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 251
 testRunner.Then("JSON \'$.content[?(@.name == \'notificationCompletion\')].name\'=\'notificationComplet" +
                    "ion\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 252
 testRunner.Then("JSON \'$.content[?(@.name == \'notificationCompletion\')].status\'=\'READY\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Execute a composite task")]
        [Xunit.TraitAttribute("FeatureTitle", "HumanTaskInstances")]
        [Xunit.TraitAttribute("Description", "Execute a composite task")]
        public virtual void ExecuteACompositeTask()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Execute a composite task", null, ((string[])(null)));
#line 254
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table183 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table183.AddRow(new string[] {
                        "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                        "taskInitiator"});
#line 255
 testRunner.When("authenticate", ((string)(null)), table183, "When ");
#line hidden
            TechTalk.SpecFlow.Table table184 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table184.AddRow(new string[] {
                        "humanTaskName",
                        "compositeTask"});
            table184.AddRow(new string[] {
                        "operationParameters",
                        "{ \"isGoldenClient\": \"true\", \"firstName\": \"FirstName\" }"});
#line 258
 testRunner.And("execute HTTP POST JSON request \'http://localhost/humantaskinstances\'", ((string)(null)), table184, "And ");
#line 262
 testRunner.And("extract JSON from body", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 263
 testRunner.And("extract \'id\' from JSON body into \'humanTaskInstanceId\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table185 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table185.AddRow(new string[] {
                        "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                        "administrator"});
#line 264
 testRunner.And("authenticate", ((string)(null)), table185, "And ");
#line 267
 testRunner.And("execute HTTP GET request \'http://localhost/humantaskinstances/$humanTaskInstanceI" +
                    "d$/start\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 268
 testRunner.And("execute HTTP GET request \'http://localhost/humantaskinstances/$humanTaskInstanceI" +
                    "d$/subtasks\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 269
 testRunner.And("extract JSON from body", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 271
 testRunner.Then("HTTP status code equals to \'200\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 272
 testRunner.Then("JSON \'content[0].name\'=\'addClient\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Check the result of an automatic completion behavior")]
        [Xunit.TraitAttribute("FeatureTitle", "HumanTaskInstances")]
        [Xunit.TraitAttribute("Description", "Check the result of an automatic completion behavior")]
        public virtual void CheckTheResultOfAnAutomaticCompletionBehavior()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check the result of an automatic completion behavior", null, ((string[])(null)));
#line 274
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table186 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table186.AddRow(new string[] {
                        "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                        "taskInitiator"});
#line 275
 testRunner.When("authenticate", ((string)(null)), table186, "When ");
#line hidden
            TechTalk.SpecFlow.Table table187 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table187.AddRow(new string[] {
                        "humanTaskName",
                        "compositeTaskWithAutomaticCompletionBehavior"});
            table187.AddRow(new string[] {
                        "operationParameters",
                        "{ \"isGoldenClient\": \"true\", \"firstName\": \"FirstName\" }"});
#line 278
 testRunner.And("execute HTTP POST JSON request \'http://localhost/humantaskinstances\'", ((string)(null)), table187, "And ");
#line 282
 testRunner.And("extract JSON from body", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 283
 testRunner.And("extract \'id\' from JSON body into \'humanTaskInstanceId\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table188 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table188.AddRow(new string[] {
                        "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                        "administrator"});
#line 284
 testRunner.And("authenticate", ((string)(null)), table188, "And ");
#line 287
 testRunner.And("execute HTTP GET request \'http://localhost/humantaskinstances/$humanTaskInstanceI" +
                    "d$/start\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 288
 testRunner.And("execute HTTP GET request \'http://localhost/humantaskinstances/$humanTaskInstanceI" +
                    "d$/subtasks\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 289
 testRunner.And("extract JSON from body", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 290
 testRunner.And("extract \'$.content[?(@.name == \'addClient\')].id\' from JSON body into \'subHumanTas" +
                    "kInstanceId\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 291
 testRunner.And("execute HTTP GET request \'http://localhost/humantaskinstances/$subHumanTaskInstan" +
                    "ceId$/start\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table189 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table189.AddRow(new string[] {
                        "operationParameters",
                        "{ \"wage\": \"3\" }"});
#line 292
 testRunner.And("execute HTTP POST JSON request \'http://localhost/humantaskinstances/$subHumanTask" +
                    "InstanceId$/complete\'", ((string)(null)), table189, "And ");
#line 295
 testRunner.And("execute HTTP GET request \'http://localhost/humantaskinstances/$humanTaskInstanceI" +
                    "d$/details\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 296
 testRunner.And("extract JSON from body into \'detailsHumanTaskInstance\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 297
 testRunner.And("execute HTTP GET request \'http://localhost/humantaskinstances/$humanTaskInstanceI" +
                    "d$/subtasks\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 298
 testRunner.And("extract JSON from body into \'subTasks\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 300
 testRunner.Then("HTTP status code equals to \'200\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 301
 testRunner.Then("extract JSON \'detailsHumanTaskInstance\', JSON exists \'id\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 302
 testRunner.Then("extract JSON \'detailsHumanTaskInstance\', JSON \'name\'=\'compositeTaskWithAutomaticC" +
                    "ompletionBehavior\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 303
 testRunner.Then("extract JSON \'detailsHumanTaskInstance\', JSON \'status\'=\'COMPLETED\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 304
 testRunner.Then("extract JSON \'subTasks\', JSON \'$.content[?(@.name == \'addClient\')].status\'=\'COMPL" +
                    "ETED\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 305
 testRunner.Then("extract JSON \'subTasks\', JSON \'$.content[?(@.name == \'emptyTask\')].status\'=\'OBSOL" +
                    "ETE\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Xunit.FactAttribute(DisplayName="Search human task instances")]
        [Xunit.TraitAttribute("FeatureTitle", "HumanTaskInstances")]
        [Xunit.TraitAttribute("Description", "Search human task instances")]
        public virtual void SearchHumanTaskInstances()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Search human task instances", null, ((string[])(null)));
#line 307
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table190 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table190.AddRow(new string[] {
                        "name",
                        "searchHumanTask"});
#line 308
 testRunner.When("execute HTTP POST JSON request \'http://localhost/humantasksdefs\'", ((string)(null)), table190, "When ");
#line 311
 testRunner.And("extract JSON from body", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 312
 testRunner.And("extract \'id\' from JSON body into \'humanTaskDefId\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table191 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table191.AddRow(new string[] {
                        "peopleAssignments",
                        "[ { \"type\": \"USERIDENTIFIERS\", \"value\": \"user1\", \"usage\" : \"POTENTIALOWNER\" }, { " +
                            "\"type\" : \"USERIDENTIFIERS\", \"value\": \"user1\", \"usage\" : \"TASKINITIATOR\" } ]"});
#line 313
 testRunner.And("execute HTTP PUT JSON request \'http://localhost/humantasksdefs/$humanTaskDefId$/a" +
                    "ssignment\'", ((string)(null)), table191, "And ");
#line hidden
            TechTalk.SpecFlow.Table table192 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table192.AddRow(new string[] {
                        "presentationElements",
                        "[ { \"language\" : \"fr\", \"value\": \"bonjour\", \"usage\" : \"NAME\" } ]"});
            table192.AddRow(new string[] {
                        "presentationParameters",
                        "[ ]"});
#line 316
 testRunner.And("execute HTTP PUT JSON request \'http://localhost/humantasksdefs/$humanTaskDefId$/p" +
                    "resentationelts\'", ((string)(null)), table192, "And ");
#line hidden
            TechTalk.SpecFlow.Table table193 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table193.AddRow(new string[] {
                        "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/nameidentifier",
                        "user1"});
#line 320
 testRunner.And("authenticate", ((string)(null)), table193, "And ");
#line hidden
            TechTalk.SpecFlow.Table table194 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table194.AddRow(new string[] {
                        "humanTaskName",
                        "searchHumanTask"});
#line 323
 testRunner.And("execute HTTP POST JSON request \'http://localhost/humantaskinstances\'", ((string)(null)), table194, "And ");
#line hidden
            TechTalk.SpecFlow.Table table195 = new TechTalk.SpecFlow.Table(new string[] {
                        "Key",
                        "Value"});
            table195.AddRow(new string[] {
                        "Accept-Language",
                        "fr"});
#line 326
 testRunner.And("execute HTTP POST JSON request \'http://localhost/humantaskinstances/.search\'", ((string)(null)), table195, "And ");
#line 329
 testRunner.And("extract JSON from body", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 331
 testRunner.Then("HTTP status code equals to \'200\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 332
 testRunner.Then("JSON \'content[0].name\'=\'searchHumanTask\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 333
 testRunner.Then("JSON \'content[0].actualOwner\'=\'user1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 334
 testRunner.Then("JSON \'content[0].presentationName\'=\'bonjour\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.0.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                HumanTaskInstancesFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                HumanTaskInstancesFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
