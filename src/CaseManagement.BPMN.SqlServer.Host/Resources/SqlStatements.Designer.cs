//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CaseManagement.BPMN.SqlServer.Host.Resources {
    using System;
    
    
    /// <summary>
    ///   Une classe de ressource fortement typée destinée, entre autres, à la consultation des chaînes localisées.
    /// </summary>
    // Cette classe a été générée automatiquement par la classe StronglyTypedResourceBuilder
    // à l'aide d'un outil, tel que ResGen ou Visual Studio.
    // Pour ajouter ou supprimer un membre, modifiez votre fichier .ResX, puis réexécutez ResGen
    // avec l'option /str ou régénérez votre projet VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class SqlStatements {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SqlStatements() {
        }
        
        /// <summary>
        ///   Retourne l'instance ResourceManager mise en cache utilisée par cette classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("CaseManagement.BPMN.SqlServer.Host.Resources.SqlStatements", typeof(SqlStatements).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Remplace la propriété CurrentUICulture du thread actuel pour toutes
        ///   les recherches de ressources à l'aide de cette classe de ressource fortement typée.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à IF EXISTS(SELECT * FROM sysobjects WHERE name=&apos;Commits&apos; AND xtype = &apos;U&apos;) RETURN;
        ///CREATE TABLE [dbo].[Commits]
        ///(
        ///       [BucketId] [varchar](100) NOT NULL,
        ///       [StreamId] [char](40) NOT NULL,
        ///       [StreamIdOriginal] [nvarchar](1000) NOT NULL,
        ///       [StreamRevision] [int] NOT NULL CHECK ([StreamRevision] &gt; 0),
        ///       [Items] [tinyint] NOT NULL CHECK ([Items] &gt; 0),
        ///       [CommitId] [uniqueidentifier] NOT NULL CHECK ([CommitId] != 0x0),
        ///       [CommitSequence] [int] NOT NULL CHECK ([CommitSequen [le reste de la chaîne a été tronqué]&quot;;.
        /// </summary>
        public static string InitializeStorage {
            get {
                return ResourceManager.GetString("InitializeStorage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à WITH [cte] AS
        ///   ( {0}, ROW_NUMBER() OVER ({1}) AS [row] {2} )
        ///
        ///SELECT *
        ///  FROM [cte]
        /// WHERE [row] BETWEEN @Skip + 1
        ///                 AND @Limit + @Skip;.
        /// </summary>
        public static string PagedQueryFormat {
            get {
                return ResourceManager.GetString("PagedQueryFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Recherche une chaîne localisée semblable à INSERT
        ///  INTO Commits
        ///     ( BucketId, StreamId, StreamIdOriginal, CommitId, CommitSequence, StreamRevision, Items, CommitStamp, Headers, Payload )
        ///OUTPUT INSERTED.CheckpointNumber
        ///VALUES (@BucketId, @StreamId, @StreamIdOriginal, @CommitId, @CommitSequence, @StreamRevision, @Items, @CommitStamp, @Headers, @Payload);.
        /// </summary>
        public static string PersistCommit {
            get {
                return ResourceManager.GetString("PersistCommit", resourceCulture);
            }
        }
    }
}
