// <auto-generated />
using System;
using CaseManagement.BPMN.Persistence.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CaseManagement.BPMN.SqlServer.Host.Migrations
{
    [DbContext(typeof(BPMNDbContext))]
    [Migration("20210201134341_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.ActivityStateHistoryModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ExecutionDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("FlowNodeInstanceModelId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FlowNodeInstanceModelId");

                    b.ToTable("ActivityStateHistoryModel");
                });

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.BPMNInterfaceModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImplementationRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessInstanceModelAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProcessInstanceModelAggregateId");

                    b.ToTable("BPMNInterfaceModel");
                });

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.ExecutionPathModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProcessInstanceModelAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProcessInstanceModelAggregateId");

                    b.ToTable("ExecutionPathModel");
                });

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.ExecutionPointerModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ExecutionPathId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExecutionPathModelId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FlowNodeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstanceFlowNodeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ExecutionPathModelId");

                    b.ToTable("ExecutionPointerModel");
                });

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.FlowNodeInstanceModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("ActivityState")
                        .HasColumnType("int");

                    b.Property<string>("FlowNodeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Metadata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessInstanceModelAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProcessInstanceModelAggregateId");

                    b.ToTable("FlowNodeInstanceModel");
                });

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.FlowNodeModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessInstanceModelAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SerializedContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProcessInstanceModelAggregateId");

                    b.ToTable("FlowNodeModel");
                });

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.ItemDefinitionModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsCollection")
                        .HasColumnType("bit");

                    b.Property<int>("ItemKind")
                        .HasColumnType("int");

                    b.Property<string>("ProcessInstanceModelAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StructureRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProcessInstanceModelAggregateId");

                    b.ToTable("ItemDefinitionModel");
                });

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.MessageModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ItemRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessInstanceModelAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProcessInstanceModelAggregateId");

                    b.ToTable("MessageModel");
                });

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.MessageTokenModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Direction")
                        .HasColumnType("int");

                    b.Property<string>("ExecutionPointerModelId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerializedContent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExecutionPointerModelId");

                    b.ToTable("MessageTokenModel");
                });

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.OperationModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("BPMNInterfaceModelId")
                        .HasColumnType("bigint");

                    b.Property<string>("ImplementationRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InMessageRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OutMessageRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BPMNInterfaceModelId");

                    b.ToTable("OperationModel");
                });

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.ProcessFileModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NbInstances")
                        .HasColumnType("int");

                    b.Property<string>("Payload")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProcessFiles");
                });

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.ProcessInstanceModel", b =>
                {
                    b.Property<string>("AggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessFileId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("AggregateId");

                    b.ToTable("ProcessInstances");
                });

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.SequenceFlowModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConditionExpression")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EltId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessInstanceModelAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SourceRef")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetRef")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProcessInstanceModelAggregateId");

                    b.ToTable("SequenceFlowModel");
                });

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.StateTransitionTokenModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FlowNodeInstanceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProcessInstanceModelAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SerializedContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProcessInstanceModelAggregateId");

                    b.ToTable("StateTransitionTokenModel");
                });

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.ActivityStateHistoryModel", b =>
                {
                    b.HasOne("CaseManagement.BPMN.Persistence.EF.Models.FlowNodeInstanceModel", null)
                        .WithMany("ActivityStates")
                        .HasForeignKey("FlowNodeInstanceModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.BPMNInterfaceModel", b =>
                {
                    b.HasOne("CaseManagement.BPMN.Persistence.EF.Models.ProcessInstanceModel", null)
                        .WithMany("Interfaces")
                        .HasForeignKey("ProcessInstanceModelAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.ExecutionPathModel", b =>
                {
                    b.HasOne("CaseManagement.BPMN.Persistence.EF.Models.ProcessInstanceModel", null)
                        .WithMany("ExecutionPathLst")
                        .HasForeignKey("ProcessInstanceModelAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.ExecutionPointerModel", b =>
                {
                    b.HasOne("CaseManagement.BPMN.Persistence.EF.Models.ExecutionPathModel", null)
                        .WithMany("Pointers")
                        .HasForeignKey("ExecutionPathModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.FlowNodeInstanceModel", b =>
                {
                    b.HasOne("CaseManagement.BPMN.Persistence.EF.Models.ProcessInstanceModel", null)
                        .WithMany("ElementInstances")
                        .HasForeignKey("ProcessInstanceModelAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.FlowNodeModel", b =>
                {
                    b.HasOne("CaseManagement.BPMN.Persistence.EF.Models.ProcessInstanceModel", null)
                        .WithMany("ElementDefs")
                        .HasForeignKey("ProcessInstanceModelAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.ItemDefinitionModel", b =>
                {
                    b.HasOne("CaseManagement.BPMN.Persistence.EF.Models.ProcessInstanceModel", null)
                        .WithMany("ItemDefs")
                        .HasForeignKey("ProcessInstanceModelAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.MessageModel", b =>
                {
                    b.HasOne("CaseManagement.BPMN.Persistence.EF.Models.ProcessInstanceModel", null)
                        .WithMany("Messages")
                        .HasForeignKey("ProcessInstanceModelAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.MessageTokenModel", b =>
                {
                    b.HasOne("CaseManagement.BPMN.Persistence.EF.Models.ExecutionPointerModel", null)
                        .WithMany("Tokens")
                        .HasForeignKey("ExecutionPointerModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.OperationModel", b =>
                {
                    b.HasOne("CaseManagement.BPMN.Persistence.EF.Models.BPMNInterfaceModel", null)
                        .WithMany("Operations")
                        .HasForeignKey("BPMNInterfaceModelId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.SequenceFlowModel", b =>
                {
                    b.HasOne("CaseManagement.BPMN.Persistence.EF.Models.ProcessInstanceModel", null)
                        .WithMany("SequenceFlows")
                        .HasForeignKey("ProcessInstanceModelAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.BPMN.Persistence.EF.Models.StateTransitionTokenModel", b =>
                {
                    b.HasOne("CaseManagement.BPMN.Persistence.EF.Models.ProcessInstanceModel", null)
                        .WithMany("StateTransitions")
                        .HasForeignKey("ProcessInstanceModelAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
