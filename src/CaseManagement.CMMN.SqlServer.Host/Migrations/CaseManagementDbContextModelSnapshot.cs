// <auto-generated />
using System;
using CaseManagement.CMMN.Persistence.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CaseManagement.CMMN.SqlServer.Host.Migrations
{
    [DbContext(typeof(CaseManagementDbContext))]
    partial class CaseManagementDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CaseManagement.CMMN.Persistence.EF.Models.CaseFileModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerializedContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CaseFiles");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Persistence.EF.Models.CasePlanElementInstanceModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CasePlanInstanceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EltId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ParentId")
                        .HasColumnType("bigint");

                    b.Property<string>("SerializedContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CasePlanInstanceId");

                    b.HasIndex("ParentId");

                    b.ToTable("CasePlanElementInstanceLst");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Persistence.EF.Models.CasePlanFileItemModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CasePlanId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DefinitionType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileItemId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileItemName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CasePlanId");

                    b.ToTable("CasePlanFileItemModel");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Persistence.EF.Models.CasePlanInstanceFileItemModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CaseFileItemType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CasePlanElementInstanceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CasePlanInstanceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ExternalValue")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CasePlanInstanceId");

                    b.ToTable("CasePlanInstanceFileItemLst");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Persistence.EF.Models.CasePlanInstanceModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CaseFileId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CasePlanId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CaseState")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExecutionContext")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CasePlanInstances");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Persistence.EF.Models.CasePlanInstanceWorkerTaskModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CasePlanElementInstanceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CasePlanInstanceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CasePlanInstanceId");

                    b.ToTable("CasePlanInstanceWorkerTaskLst");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Persistence.EF.Models.CasePlanModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CaseFileId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CasePlanId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NbInstances")
                        .HasColumnType("int");

                    b.Property<string>("SerializedContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CasePlans");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Persistence.EF.Models.CaseWorkerTaskModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CasePlanInstanceElementId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CasePlanInstanceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CaseWorkers");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Persistence.EF.Models.QueueMessageModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("QueueName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerializedContent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QueueMessageLst");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Persistence.EF.Models.RoleClaimModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RoleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Claims");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Persistence.EF.Models.RoleModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CasePlanId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CasePlanInstanceId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CaseWorkerTaskId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCaseOwner")
                        .HasColumnType("bit");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CasePlanId");

                    b.HasIndex("CasePlanInstanceId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Persistence.EF.Models.ScheduledMessageModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ElapsedTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("QueueName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerializedContent")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ScheduledMessageLst");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Persistence.EF.Models.SubscriptionModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CaptureDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("CasePlanElementInstanceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CasePlanInstanceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCaptured")
                        .HasColumnType("bit");

                    b.Property<string>("Parameters")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionLst");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Persistence.EF.Models.CasePlanElementInstanceModel", b =>
                {
                    b.HasOne("CaseManagement.CMMN.Persistence.EF.Models.CasePlanInstanceModel", "CasePlanInstance")
                        .WithMany("Children")
                        .HasForeignKey("CasePlanInstanceId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CaseManagement.CMMN.Persistence.EF.Models.CasePlanElementInstanceModel", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");
                });

            modelBuilder.Entity("CaseManagement.CMMN.Persistence.EF.Models.CasePlanFileItemModel", b =>
                {
                    b.HasOne("CaseManagement.CMMN.Persistence.EF.Models.CasePlanModel", "CasePlan")
                        .WithMany("Files")
                        .HasForeignKey("CasePlanId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.CMMN.Persistence.EF.Models.CasePlanInstanceFileItemModel", b =>
                {
                    b.HasOne("CaseManagement.CMMN.Persistence.EF.Models.CasePlanInstanceModel", "CasePlanInstance")
                        .WithMany("Files")
                        .HasForeignKey("CasePlanInstanceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.CMMN.Persistence.EF.Models.CasePlanInstanceWorkerTaskModel", b =>
                {
                    b.HasOne("CaseManagement.CMMN.Persistence.EF.Models.CasePlanInstanceModel", "CasePlanInstance")
                        .WithMany("WorkerTasks")
                        .HasForeignKey("CasePlanInstanceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.CMMN.Persistence.EF.Models.RoleClaimModel", b =>
                {
                    b.HasOne("CaseManagement.CMMN.Persistence.EF.Models.RoleModel", "Role")
                        .WithMany("Claims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.CMMN.Persistence.EF.Models.RoleModel", b =>
                {
                    b.HasOne("CaseManagement.CMMN.Persistence.EF.Models.CasePlanModel", "CasePlan")
                        .WithMany("Roles")
                        .HasForeignKey("CasePlanId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CaseManagement.CMMN.Persistence.EF.Models.CasePlanInstanceModel", "CasePlanInstance")
                        .WithMany("Roles")
                        .HasForeignKey("CasePlanInstanceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
