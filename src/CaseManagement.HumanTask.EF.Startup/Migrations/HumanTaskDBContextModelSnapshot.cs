// <auto-generated />
using System;
using CaseManagement.HumanTask.Persistence.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CaseManagement.HumanTask.EF.Startup.Migrations
{
    [DbContext(typeof(HumanTaskDBContext))]
    partial class HumanTaskDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.CallbackOperation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HumanTaskInstanceAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HumanTaskInstanceAggregateAggregateId");

                    b.ToTable("CallbackOperation");
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.Completion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HumanTaskDefinitionAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HumanTaskInstanceAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("HumanTaskDefinitionAggregateAggregateId");

                    b.HasIndex("HumanTaskInstanceAggregateAggregateId");

                    b.ToTable("Completion");
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.Copy", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CompletionId")
                        .HasColumnType("bigint");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompletionId");

                    b.ToTable("Copy");
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.Escalation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HumanTaskDefinitionDeadLineId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("HumanTaskInstanceDeadLineId")
                        .HasColumnType("bigint");

                    b.Property<string>("NotificationId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HumanTaskDefinitionDeadLineId");

                    b.HasIndex("HumanTaskInstanceDeadLineId");

                    b.ToTable("Escalation");
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.HumanTaskDefinitionAggregate", b =>
                {
                    b.Property<string>("AggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("ActualOwnerRequired")
                        .HasColumnType("bit");

                    b.Property<int>("CompletionAction")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("InstantiationPattern")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NbInstances")
                        .HasColumnType("int");

                    b.Property<string>("Outcome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Rendering")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SearchBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("AggregateId");

                    b.ToTable("HumanTaskDefinitions");
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.HumanTaskDefinitionDeadLine", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("For")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HumanTaskDefinitionAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Until")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Usage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HumanTaskDefinitionAggregateAggregateId");

                    b.ToTable("HumanTaskDefinitionDeadLine");
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.HumanTaskDefinitionSubTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HumanTaskDefinitionAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TaskName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HumanTaskDefinitionAggregateAggregateId");

                    b.ToTable("HumanTaskDefinitionSubTask");
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.HumanTaskInstanceAggregate", b =>
                {
                    b.Property<string>("AggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("ActivationDeferralTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("ActualOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompletionBehavior")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpirationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("HumanTaskDefName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HumanTaskInstanceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InputParameters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("InstantiationPattern")
                        .HasColumnType("int");

                    b.Property<string>("OutputParameters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentHumanTaskId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentHumanTaskName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Rendering")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("AggregateId");

                    b.ToTable("HumanTaskInstanceAggregate");
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.HumanTaskInstanceDeadLine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("EndDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("HumanTaskInstanceAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Usage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HumanTaskInstanceAggregateAggregateId");

                    b.ToTable("HumanTaskInstanceDeadLine");
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.HumanTaskInstanceEventHistory", b =>
                {
                    b.Property<string>("EventId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EndOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EventTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventType")
                        .HasColumnType("int");

                    b.Property<string>("HumanTaskIdentifier")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HumanTaskInstanceAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("StartOwner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskStatus")
                        .HasColumnType("int");

                    b.Property<string>("UserPrincipal")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventId");

                    b.HasIndex("HumanTaskInstanceAggregateAggregateId");

                    b.ToTable("HumanTaskInstanceEventHistory");
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.HumanTaskInstanceSubTask", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HumanTaskInstanceAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HumanTaskName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HumanTaskInstanceAggregateAggregateId");

                    b.ToTable("HumanTaskInstanceSubTask");
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.NotificationDefinitionAggregate", b =>
                {
                    b.Property<string>("AggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NbInstances")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Rendering")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("AggregateId");

                    b.ToTable("NotificationDefinitions");
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.NotificationInstanceAggregate", b =>
                {
                    b.Property<string>("AggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NotificationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationParameters")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("Rendering")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("AggregateId");

                    b.ToTable("NotificationInstanceAggregate");
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.Parameter", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HumanTaskDefinitionAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HumanTaskInstanceAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationDefinitionAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("Usage")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HumanTaskDefinitionAggregateAggregateId");

                    b.HasIndex("HumanTaskInstanceAggregateAggregateId");

                    b.HasIndex("NotificationDefinitionAggregateAggregateId");

                    b.ToTable("Parameter");
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.PeopleAssignmentDefinition", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("HumanTaskDefinitionAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NotificationDefinitionAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("Usage")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HumanTaskDefinitionAggregateAggregateId");

                    b.HasIndex("NotificationDefinitionAggregateAggregateId");

                    b.ToTable("PeopleAssignmentDefinition");
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.PeopleAssignmentInstance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("HumanTaskInstanceAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NotificationInstanceAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("Usage")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HumanTaskInstanceAggregateAggregateId");

                    b.HasIndex("NotificationInstanceAggregateAggregateId");

                    b.ToTable("PeopleAssignmentInstance");
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.PresentationElementDefinition", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HumanTaskDefinitionAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationDefinitionAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Usage")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HumanTaskDefinitionAggregateAggregateId");

                    b.HasIndex("NotificationDefinitionAggregateAggregateId");

                    b.ToTable("PresentationElementDefinition");
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.PresentationElementInstance", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ContentType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HumanTaskInstanceAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationInstanceAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Usage")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("HumanTaskInstanceAggregateAggregateId");

                    b.HasIndex("NotificationInstanceAggregateAggregateId");

                    b.ToTable("PresentationElementInstance");
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.PresentationParameter", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Expression")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HumanTaskDefinitionAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotificationDefinitionAggregateAggregateId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("HumanTaskDefinitionAggregateAggregateId");

                    b.HasIndex("NotificationDefinitionAggregateAggregateId");

                    b.ToTable("PresentationParameter");
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.ToPart", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EscalationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Expression")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("HumanTaskDefinitionSubTaskId")
                        .HasColumnType("bigint");

                    b.Property<long?>("HumanTaskInstanceSubTaskId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EscalationId");

                    b.HasIndex("HumanTaskDefinitionSubTaskId");

                    b.HasIndex("HumanTaskInstanceSubTaskId");

                    b.ToTable("ToPart");
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.Translation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Translation");
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.CallbackOperation", b =>
                {
                    b.HasOne("CaseManagement.HumanTask.Domains.HumanTaskInstanceAggregate", null)
                        .WithMany("CallbackOperations")
                        .HasForeignKey("HumanTaskInstanceAggregateAggregateId");
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.Completion", b =>
                {
                    b.HasOne("CaseManagement.HumanTask.Domains.HumanTaskDefinitionAggregate", null)
                        .WithMany("Completions")
                        .HasForeignKey("HumanTaskDefinitionAggregateAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CaseManagement.HumanTask.Domains.HumanTaskInstanceAggregate", null)
                        .WithMany("Completions")
                        .HasForeignKey("HumanTaskInstanceAggregateAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.Copy", b =>
                {
                    b.HasOne("CaseManagement.HumanTask.Domains.Completion", null)
                        .WithMany("CopyLst")
                        .HasForeignKey("CompletionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.Escalation", b =>
                {
                    b.HasOne("CaseManagement.HumanTask.Domains.HumanTaskDefinitionDeadLine", null)
                        .WithMany("Escalations")
                        .HasForeignKey("HumanTaskDefinitionDeadLineId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CaseManagement.HumanTask.Domains.HumanTaskInstanceDeadLine", null)
                        .WithMany("Escalations")
                        .HasForeignKey("HumanTaskInstanceDeadLineId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.HumanTaskDefinitionDeadLine", b =>
                {
                    b.HasOne("CaseManagement.HumanTask.Domains.HumanTaskDefinitionAggregate", null)
                        .WithMany("DeadLines")
                        .HasForeignKey("HumanTaskDefinitionAggregateAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.HumanTaskDefinitionSubTask", b =>
                {
                    b.HasOne("CaseManagement.HumanTask.Domains.HumanTaskDefinitionAggregate", null)
                        .WithMany("SubTasks")
                        .HasForeignKey("HumanTaskDefinitionAggregateAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.HumanTaskInstanceDeadLine", b =>
                {
                    b.HasOne("CaseManagement.HumanTask.Domains.HumanTaskInstanceAggregate", null)
                        .WithMany("DeadLines")
                        .HasForeignKey("HumanTaskInstanceAggregateAggregateId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.HumanTaskInstanceEventHistory", b =>
                {
                    b.HasOne("CaseManagement.HumanTask.Domains.HumanTaskInstanceAggregate", null)
                        .WithMany("EventHistories")
                        .HasForeignKey("HumanTaskInstanceAggregateAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.HumanTaskInstanceSubTask", b =>
                {
                    b.HasOne("CaseManagement.HumanTask.Domains.HumanTaskInstanceAggregate", null)
                        .WithMany("SubTasks")
                        .HasForeignKey("HumanTaskInstanceAggregateAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.Parameter", b =>
                {
                    b.HasOne("CaseManagement.HumanTask.Domains.HumanTaskDefinitionAggregate", null)
                        .WithMany("OperationParameters")
                        .HasForeignKey("HumanTaskDefinitionAggregateAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CaseManagement.HumanTask.Domains.HumanTaskInstanceAggregate", null)
                        .WithMany("OperationParameters")
                        .HasForeignKey("HumanTaskInstanceAggregateAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CaseManagement.HumanTask.Domains.NotificationDefinitionAggregate", null)
                        .WithMany("OperationParameters")
                        .HasForeignKey("NotificationDefinitionAggregateAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.PeopleAssignmentDefinition", b =>
                {
                    b.HasOne("CaseManagement.HumanTask.Domains.HumanTaskDefinitionAggregate", null)
                        .WithMany("PeopleAssignments")
                        .HasForeignKey("HumanTaskDefinitionAggregateAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CaseManagement.HumanTask.Domains.NotificationDefinitionAggregate", null)
                        .WithMany("PeopleAssignments")
                        .HasForeignKey("NotificationDefinitionAggregateAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.PeopleAssignmentInstance", b =>
                {
                    b.HasOne("CaseManagement.HumanTask.Domains.HumanTaskInstanceAggregate", null)
                        .WithMany("PeopleAssignments")
                        .HasForeignKey("HumanTaskInstanceAggregateAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CaseManagement.HumanTask.Domains.NotificationInstanceAggregate", null)
                        .WithMany("PeopleAssignments")
                        .HasForeignKey("NotificationInstanceAggregateAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.PresentationElementDefinition", b =>
                {
                    b.HasOne("CaseManagement.HumanTask.Domains.HumanTaskDefinitionAggregate", null)
                        .WithMany("PresentationElements")
                        .HasForeignKey("HumanTaskDefinitionAggregateAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CaseManagement.HumanTask.Domains.NotificationDefinitionAggregate", null)
                        .WithMany("PresentationElements")
                        .HasForeignKey("NotificationDefinitionAggregateAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.PresentationElementInstance", b =>
                {
                    b.HasOne("CaseManagement.HumanTask.Domains.HumanTaskInstanceAggregate", null)
                        .WithMany("PresentationElements")
                        .HasForeignKey("HumanTaskInstanceAggregateAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CaseManagement.HumanTask.Domains.NotificationInstanceAggregate", null)
                        .WithMany("PresentationElements")
                        .HasForeignKey("NotificationInstanceAggregateAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.PresentationParameter", b =>
                {
                    b.HasOne("CaseManagement.HumanTask.Domains.HumanTaskDefinitionAggregate", null)
                        .WithMany("PresentationParameters")
                        .HasForeignKey("HumanTaskDefinitionAggregateAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CaseManagement.HumanTask.Domains.NotificationDefinitionAggregate", null)
                        .WithMany("PresentationParameters")
                        .HasForeignKey("NotificationDefinitionAggregateAggregateId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("CaseManagement.HumanTask.Domains.ToPart", b =>
                {
                    b.HasOne("CaseManagement.HumanTask.Domains.Escalation", null)
                        .WithMany("ToParts")
                        .HasForeignKey("EscalationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("CaseManagement.HumanTask.Domains.HumanTaskDefinitionSubTask", null)
                        .WithMany("ToParts")
                        .HasForeignKey("HumanTaskDefinitionSubTaskId");

                    b.HasOne("CaseManagement.HumanTask.Domains.HumanTaskInstanceSubTask", null)
                        .WithMany("ToParts")
                        .HasForeignKey("HumanTaskInstanceSubTaskId");
                });
#pragma warning restore 612, 618
        }
    }
}
